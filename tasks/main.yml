---
- name: Create the project folder
  ansible.builtin.file:
    dest: /var/docker/{{ docker_deployment_project_name }}
    state: directory
    mode: 0755

- name: Create the release folder
  ansible.builtin.file:
    dest: /var/docker/{{ docker_deployment_project_name }}/releases/{{ docker_deployment_release_name }}
    state: directory
    mode: 0755

- name: Copy release files
  ansible.builtin.copy:
    src: '{{ item.local }}'
    dest: /var/docker/{{ docker_deployment_project_name }}/releases/{{ docker_deployment_release_name }}/{{ item.remote }}
  loop: '{{ docker_deployment_release_files }}'

- name: Copy release templates
  ansible.builtin.template:
    src: '{{ item.local }}'
    dest: /var/docker/{{ docker_deployment_project_name }}/releases/{{ docker_deployment_release_name }}/{{ item.remote }}
  loop: '{{ docker_deployment_release_templates }}'

- name: Create the shared folder
  ansible.builtin.file:
    dest: /var/docker/{{ docker_deployment_project_name }}/shared
    state: directory
    mode: 0755

- name: Copy shared files
  ansible.builtin.copy:
    src: '{{ item.local }}'
    dest: /var/docker/{{ docker_deployment_project_name }}/shared/{{ item.remote }}
    force: no
  loop: '{{ docker_deployment_shared_files }}'

- name: Link shared files into release folder
  ansible.builtin.file:
    src: /var/docker/{{ docker_deployment_project_name }}/shared/{{ item.remote }}
    dest: /var/docker/{{ docker_deployment_project_name }}/releases/{{ docker_deployment_release_name }}/{{ item.remote }}
    state: link
  loop: '{{ docker_deployment_shared_files }}'

- name: Check if current folder exists
  ansible.builtin.stat:
    path: /var/docker/{{ docker_deployment_project_name }}/current
  register: docker_deployment_current_folder_stats

- name: Stop old Docker containers
  ansible.builtin.docker_compose_v2:
    project_src: /var/docker/{{ docker_deployment_project_name }}/current
    state: absent
  when: docker_deployment_current_folder_stats.stat.exists

- name: Updating current link
  ansible.builtin.file:
    src: /var/docker/{{ docker_deployment_project_name }}/releases/{{ docker_deployment_release_name }}
    dest: /var/docker/{{ docker_deployment_project_name }}/current
    state: link

- name: Start the release
  block:
    - name: Start new Docker containers
      community.docker.docker_compose_v2:
        project_src: /var/docker/{{ docker_deployment_project_name }}/current
        state: present
        pull: always

    - name: Run health checks
      ansible.builtin.shell:
        chdir: /var/docker/{{ docker_deployment_project_name }}/current
        cmd: python3 /var/docker/healthchecks.py

  rescue:
    - name: Stop new Docker containers
      community.docker.docker_compose_v2:
        project_src: /var/docker/{{ docker_deployment_project_name }}/current
        state: absent

    - name: Delete current link if old release did not exist
      ansible.builtin.file:
        path: /var/docker/{{ docker_deployment_project_name }}/current
        state: absent
      when: docker_deployment_current_folder_stats.stat.exists == False 

    - name: Revert current link if old release existed
      ansible.builtin.file:
        src: '{{ docker_deployment_current_folder_stats.stat.lnk_source }}'
        dest: /var/docker/{{ docker_deployment_project_name }}/current
        state: link
      when: docker_deployment_current_folder_stats.stat.exists

    - name: Start old Docker containers if old release existed
      community.docker.docker_compose_v2:
        project_src: /var/docker/{{ docker_deployment_project_name }}/current
        state: present
      when: docker_deployment_current_folder_stats.stat.exists

    - name: Fail the deployment
      ansible.builtin.fail:
        msg: The deployment failed, because the 'docker-compose up' command failed or the containers did not reach a healthy state.
